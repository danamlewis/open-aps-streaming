version: "3.5"
services:
  open-aps-db:
    restart: always
    environment:
      POSTGRES_USER: ${OPEN_APS_POSTGRES_ADMIN_USER}
      POSTGRES_PASSWORD: ${OPEN_APS_POSTGRES_ADMIN_PASSWORD}
      POSTGRES_DB: ${OPEN_APS_POSTGRES_DB}
      POSTGRES_REGISTER_USER: ${OPEN_APS_POSTGRES_REGISTER_USER}
      POSTGRES_REGISTER_PASSWORD: ${OPEN_APS_REGISTER_PASSWORD}
      POSTGRES_NIGHTSCOUT_USER: ${OPEN_APS_POSTGRES_NIGHTSCOUT_USER}
      POSTGRES_NIGHTSCOUT_PASSWORD: ${OPEN_APS_NIGHTSCOUT_PASSWORD}
      POSTGRES_METABASE_PASSWORD: ${OPEN_APS_POSTGRES_METABASE_PASSWORD}
      POSTGRES_INGESTOR_PASSWORD: ${OPEN_APS_POSTGRES_INGESTOR_PASSWORD}
      POSTGRES_ADMIN_VIEWER_PASSWORD: ${OPEN_APS_POSTGRES_ADMIN_VIEWER_PASSWORD}
      POSTGRES_VIEWER_PASSWORD: ${OPEN_APS_POSTGRES_VIEWER_PASSWORD}
      POSTGRES_EXT_OPENAPS_APP_PASSWORD: ${OPEN_APS_POSTGRES_EXT_OPENAPS_APP_PASSWORD}
      DOWNLOADER_ADMIN_PASSWORD_HASH: ${OPEN_APS_DOWNLOADER_ADMIN_PASSWORD_HASH}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${OPEN_APS_POSTGRES_ADMIN_USER} -d ${OPEN_APS_POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: -p ${OPEN_APS_POSTGRES_PORT}
  open-aps-registration-site:
    restart: always
    environment:
      POSTGRES_HOST: 'open-aps-db'
      POSTGRES_PORT: ${OPEN_APS_POSTGRES_PORT}
      POSTGRES_USER: ${OPEN_APS_POSTGRES_REGISTER_USER}
      POSTGRES_PASSWORD: ${OPEN_APS_REGISTER_PASSWORD}
      POSTGRES_DB: ${OPEN_APS_POSTGRES_DB}
      APP_BASE_URL: ${OPEN_APS_REGISTRATION_BASE_URL}
      APP_PORT: ${OPEN_APS_REGISTRATION_PORT}
      OPEN_HUMANS_CLIENT_ID: ${OPEN_HUMANS_CLIENT_ID}
      OPEN_HUMANS_PROJECT_ADDRESS: ${OPEN_HUMANS_PROJECT_ADDRESS}
      OPEN_HUMANS_CLIENT_SECRET: ${OPEN_HUMANS_CLIENT_SECRET}
    command: ./wait-for-it.sh open-aps-db:${OPEN_APS_POSTGRES_PORT} -- ./entrypoint.sh
  open-aps-nightscout-ingester:
    restart: always
    environment:
      POSTGRES_HOST: 'open-aps-db'
      POSTGRES_PORT: ${OPEN_APS_POSTGRES_PORT}
      POSTGRES_USER: ${OPEN_APS_POSTGRES_NIGHTSCOUT_USER}
      POSTGRES_PASSWORD: ${OPEN_APS_NIGHTSCOUT_PASSWORD}
      POSTGRES_DB: ${OPEN_APS_POSTGRES_DB}
      OPEN_HUMANS_CLIENT_ID: ${OPEN_HUMANS_CLIENT_ID}
      OPEN_HUMANS_PROJECT_ADDRESS: ${OPEN_HUMANS_PROJECT_ADDRESS}
      OPEN_HUMANS_CLIENT_SECRET: ${OPEN_HUMANS_CLIENT_SECRET}
      INGEST_INTERVAL_HOURS: ${OPEN_APS_INGEST_INTERVAL_HOURS}
    command: ./wait-for-it.sh open-aps-db:${OPEN_APS_POSTGRES_PORT} -- ./wait-for-it.sh open-aps-registration-site:${OPEN_APS_REGISTRATION_PORT} -- ./entrypoint.sh
  open-aps-downloader:
    restart: always
    environment:
      POSTGRES_HOST: 'open-aps-db'
      POSTGRES_PORT: ${OPEN_APS_POSTGRES_PORT}
      POSTGRES_USER: 'ext_openaps_app'
      POSTGRES_PASSWORD: ${OPEN_APS_POSTGRES_EXT_OPENAPS_APP_PASSWORD}
      POSTGRES_DB: ${OPEN_APS_POSTGRES_DB}
      DOWNLOADER_APP_EMAIL: ${OPEN_APS_DOWNLOADER_EMAIL}
      DOWNLOADER_EMAIL_PASSWORD: ${OPEN_APS_DOWNLOADER_EMAIL_PASS}
      DOWNLOADER_SECRET_KEY: ${OPEN_APS_DOWNLOADER_SECRET_KEY}
      METABASE_SECRET_KEY: ${OPEN_APS_DOWNLOADER_METABASE_KEY}
      METABASE_URL: ${OPEN_APS_DOWNLOADER_METABASE_URL}
      DOWNLOADER_SLACK_KEY: ${OPEN_APS_DOWNLOADER_SLACK_KEY}
      DOWNLOADER_ADMIN_EMAIL: ${OPEN_APS_DOWNLOADER_ADMIN_EMAIL}
      DOWNLOADER_PUBLIC_URL: ${OPEN_APS_DOWNLOADER_PUBLIC_URL}
    command: ./wait-for-it.sh open-aps-db:${OPEN_APS_POSTGRES_PORT} -- ./entrypoint.sh
  metabase:
    restart: always
    environment: 
      MB_DB_TYPE: 'postgres'
      MB_DB_DBNAME: ${OPEN_APS_POSTGRES_DB}
      MB_DB_PORT: ${OPEN_APS_POSTGRES_PORT}
      MB_DB_USER: 'openapsuser'
      MB_DB_PASS: ${OPEN_APS_POSTGRES_METABASE_PASSWORD}
      MB_DB_HOST: 'open-aps-db'
  open-aps-etl:
    restart: always
    environment:
      POSTGRES_HOST: 'open-aps-db'
      POSTGRES_PORT: ${OPEN_APS_POSTGRES_PORT}
      POSTGRES_USER: 'ingestor'
      DOWNLOADER_SLACK_KEY: ${OPEN_APS_DOWNLOADER_SLACK_KEY}
      POSTGRES_PASSWORD: ${OPEN_APS_POSTGRES_INGESTOR_PASSWORD}
      POSTGRES_DB: ${OPEN_APS_POSTGRES_DB}
      ETL_INTERVAL_HOURS: ${OPEN_APS_ETL_INTERVAL_HOURS}
      OPEN_APS_DEMOGRAPHICS_SHEET_URL: ${OPEN_APS_DEMOGRAPHICS_SHEET_URL}
    volumes:
      - $PWD/credentials.json:/credentials.json
    command: ./wait-for-it.sh open-aps-db:${OPEN_APS_POSTGRES_PORT} -- ./entrypoint.sh


